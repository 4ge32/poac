aliases:
  - &run-poac-test
    name: Test Project
    command: >
      ./build/poac test --report --
      --output_format=XML
      --log_level=all
      --report_level=no
  - &store-poac-test-result
    path: _build/test/report

  - &filter-ignore-gh-pages
    branches:
      ignore: gh-pages

#      - run: *run-poac-test
#      - store_test_results: *store-poac-test-result

version: 2.1

commands:
  poac-install:
    steps:
      - restore_cache:
          keys: # restores saved poac cache
            - v1-poac-cache-{{ checksum "poac.lock" }}
            - v1-poac-cache-{{ checksum "poac.yml" }}
            - v1-poac-cache-{{ .Branch }}
            - v1-poac-cache
      - run: poac install # source file only (no pre-built)
      - save_cache:
          key: v1-poac-cache-{{ checksum "poac.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-poac-cache-{{ checksum "poac.yml" }}
          paths: "deps"
      - save_cache:
          key: v1-poac-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-poac-cache
          paths: "deps"

  build-project:
    steps:
      - run: mkdir build && cd build && cmake .. && make

  defaults:
    steps:
      - attach_workspace:
          at: .
      - run: uname -sm
      - build-project
      - run: ./build/poac -h
      - run: file ./build/poac


jobs:
  checkout_code:
    docker:
      - image: poacpm/poac
    steps:
      - checkout
#      - poac-install

      - persist_to_workspace:
          root: .
          paths: .

#  x86_64-unknown-linux-gnu_gcc-6:
#    docker:
#      - image: poacpm/x86_64-unknown-linux-gnu
#    environment:
#      CXX: g++-6
#    steps:
#      - defaults

  x86_64-unknown-linux-gnu_gcc-7:
    docker:
      - image: poacpm/x86_64-unknown-linux-gnu
    environment:
      CXX: g++-7
    steps:
      - defaults

  x86_64-unknown-linux-gnu_gcc-8:
    docker:
      - image: poacpm/x86_64-unknown-linux-gnu
    environment:
      CXX: g++-8
    working_directory: /tmp/workspace/x86_64-unknown-linux-gnu
    steps:
      - attach_workspace:
          at: /tmp/workspace/x86_64-unknown-linux-gnu

      - run: uname -sm
      - build-project
      - run: ./build/poac -h
      - run: file ./build/poac

#      - run: *run-poac-test
#      - store_test_results: *store-poac-test-result

      - persist_to_workspace:
          root: /tmp/workspace
          paths: x86_64-unknown-linux-gnu

#  x86_64-unknown-linux-gnu_clang-6:
#    docker:
#      - image: poacpm/x86_64-unknown-linux-gnu
#    environment:
#      CXX: /home/linuxbrew/.linuxbrew/opt/llvm@6/bin/clang++
#      LDFLAGS: "-L/home/linuxbrew/.linuxbrew/opt/llvm@6/lib"
#      CPPFLAGS: "-I/home/linuxbrew/.linuxbrew/opt/llvm@6/include"
#    steps:
#      - defaults

#  x86_64-unknown-linux-gnu_clang-7:
#    docker:
#      - image: poacpm/x86_64-unknown-linux-gnu
#    environment:
#      CXX: clang++
#      LDFLAGS: "-L/home/linuxbrew/.linuxbrew/opt/llvm/lib -Wl,-rpath,/home/linuxbrew/.linuxbrew/opt/llvm/lib"
#    steps:
#      - defaults

#  aarch64-unknown-linux-gnu:
#    docker:
#      - image: poacpm/aarch64-unknown-linux-gnu
#    environment:
#      CXX: g++-8
#    steps:
#      - defaults

#  powerpc-unknown-linux-gnu_gcc-4_8:
#    docker:
#      - image: poacpm/powerpc-unknown-linux-gnu
#    environment:
#      CXX: powerpc-linux-gnu-g++
#    steps:
#      - defaults

#  powerpc64-unknown-linux-gnu_gcc-5_4:
#    docker:
#      - image: poacpm/powerpc64-unknown-linux-gnu
#    environment:
#      CXX: powerpc64-linux-gnu-g++
#    steps:
#      - defaults

#  powerpc64le-unknown-linux-gnu:
#    docker:
#      - image: poacpm/powerpc64le-unknown-linux-gnu
#    environment:
#      CXX: g++-8
#    steps:
#      - defaults

#  s390x-unknown-linux-gnu:
#    docker:
#      - image: poacpm/s390x-unknown-linux-gnu
#    environment:
#      CXX: g++-8
#    steps:
#      - defaults

#  x86_64-pc-windows-gnu_gcc-6:
#    docker:
#      - image: poacpm/x86_64-pc-windows-gnu
#    environment:
#      CXX: x86_64-w64-mingw32-g++-posix
#    steps:
#      - defaults

#  i686-pc-windows-gnu_gcc-6:
#    docker:
#      - image: poacpm/i686-pc-windows-gnu
#    environment:
#      CXX: i686-w64-mingw32-g++-posix
#    steps:
#      - defaults

  release:
    docker:
      - image: circleci/golang:1.11
    steps:
      - attach_workspace:
          at: .
      - run: mkdir out
      - run: ARCH=x86_64-unknown-linux-gnu tar czf $ARCH out/$ARCH.tar.gz
      - run: go get github.com/tcnksm/ghr
      - run: ghr $CIRCLE_TAG out
#      - run: poac publish

  gh_pages:
    working_directory: ~/poac/docs
    docker:
      - image: node:10
    steps:
      - checkout
      - run: git config --global user.name $USERNAME
      - run: git config --global user.email $EMAIL
      - run: cp -r .circleci docs
      - run: npm --prefix "$PWD/docs" install
      - run: npm --prefix "$PWD/docs" run build
      - run: cp docs/assets/robots.txt docs/_book
      - run: npm --prefix "$PWD/docs" run publish

workflows:
  version: 2
  builds:
    jobs:
      - checkout_code:
          filters: *filter-ignore-gh-pages
#      - x86_64-unknown-linux-gnu_gcc-6:
#          filters: *filter-ignore-gh-pages
#          requires:
#            - checkout_code
      - x86_64-unknown-linux-gnu_gcc-7:
          filters: *filter-ignore-gh-pages
          requires:
            - checkout_code
      - x86_64-unknown-linux-gnu_gcc-8:
          filters: *filter-ignore-gh-pages
          requires:
            - checkout_code
#      - x86_64-unknown-linux-gnu_clang-6:
#          filters: *filter-ignore-gh-pages
#          requires:
#            - checkout_code
#      - x86_64-unknown-linux-gnu_clang-7:
#          filters: *filter-ignore-gh-pages
#          requires:
#            - checkout_code
#      - aarch64-unknown-linux-gnu:
#          filters: *filter-ignore-gh-pages
#          requires:
#            - checkout_code
#      - powerpc64le-unknown-linux-gnu:
#          filters: *filter-ignore-gh-pages
#          requires:
#            - checkout_code
#      - s390x-unknown-linux-gnu:
#          filters: *filter-ignore-gh-pages
#          requires:
#            - checkout_code
      - release:
          requires:
#            - x86_64-unknown-linux-gnu_gcc-6
            - x86_64-unknown-linux-gnu_gcc-7
            - x86_64-unknown-linux-gnu_gcc-8
#            - x86_64-unknown-linux-gnu_clang-6
#            - x86_64-unknown-linux-gnu_clang-7
#            - aarch64-unknown-linux-gnu
#            - powerpc64le-unknown-linux-gnu
#            - s390x-unknown-linux-gnu
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+){2}.*$/
      - gh_pages:
          filters:
            branches:
              only: master
