version: 2.1

executors:
  x86_64:
    parameters:
      compiler:
        description: "compiler-version"
        type: string
    docker:
      - image: poacpm/x86_64-unknown-linux-gnu
    environment:
      CXX: << parameters.compiler >>


commands:
  poac-install:
    steps:
      - restore_cache:
          keys: # restores saved poac cache
            - v1-poac-cache-{{ checksum "poac.lock" }}
            - v1-poac-cache-{{ checksum "poac.yml" }}
            - v1-poac-cache-{{ .Branch }}
            - v1-poac-cache
      - run: poac install # source file only (no pre-built)
      - save_cache:
          key: v1-poac-cache-{{ checksum "poac.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-poac-cache-{{ checksum "poac.yml" }}
          paths: "deps"
      - save_cache:
          key: v1-poac-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-poac-cache
          paths: "deps"

  default-build:
    steps:
      - run: uname -sm
      - run: mkdir build && cd build && cmake .. && make
      - run: ./build/poac -h
      - run: file ./build/poac

  default-test:
    steps:
      - run:
          command: >
            ./build/poac test --report --
            --output_format=XML
            --log_level=all
            --report_level=no
      - store_test_results:
          path: _build/test/report


jobs:
  checkout_code:
    docker:
      - image: poacpm/poac
    steps:
      - checkout
#      - poac-install

      - persist_to_workspace:
          root: .
          paths: .

  x86_64-unknown-linux-gnu_gcc-7:
    parameters:
      compiler:
        description: "compiler-version"
        type: string
    executor:
      name: x86_64
      compiler: << parameters.compiler >>
    steps:
      - attach_workspace:
          at: .
      - default-build
#      - default-test

  x86_64-unknown-linux-gnu_gcc-8:
    parameters:
      compiler:
        description: "compiler-version"
        type: string
      executor:
        name: x86_64
        compiler: << parameters.compiler >>
      steps:
        - attach_workspace:
            at: .
        - default-build
#      - default-test

  x86_64-unknown-linux-gnu_gcc-9:
    parameters:
      compiler:
        description: "compiler-version"
        type: string
      executor:
        name: x86_64
        compiler: << parameters.compiler >>
      working_directory: /tmp/workspace/x86_64-unknown-linux-gnu
      steps:
        - attach_workspace:
            at: /tmp/workspace/x86_64-unknown-linux-gnu
        - default-build
#        - default-test
        - persist_to_workspace:
            root: /tmp/workspace
            paths: x86_64-unknown-linux-gnu

#  x86_64-unknown-linux-gnu_clang-6:
#    docker:
#      - image: poacpm/x86_64-unknown-linux-gnu
#    environment:
#      CXX: /home/linuxbrew/.linuxbrew/opt/llvm@6/bin/clang++
#      LDFLAGS: "-L/home/linuxbrew/.linuxbrew/opt/llvm@6/lib"
#      CPPFLAGS: "-I/home/linuxbrew/.linuxbrew/opt/llvm@6/include"
#    steps:
#      - default-build

#  x86_64-unknown-linux-gnu_clang-7:
#    docker:
#      - image: poacpm/x86_64-unknown-linux-gnu
#    environment:
#      CXX: clang++
#      LDFLAGS: "-L/home/linuxbrew/.linuxbrew/opt/llvm/lib -Wl,-rpath,/home/linuxbrew/.linuxbrew/opt/llvm/lib"
#    steps:
#      - default-build

#  aarch64-unknown-linux-gnu:
#    docker:
#      - image: poacpm/aarch64-unknown-linux-gnu
#    environment:
#      CXX: g++-8
#    steps:
#      - default-build

#  powerpc-unknown-linux-gnu_gcc-4_8:
#    docker:
#      - image: poacpm/powerpc-unknown-linux-gnu
#    environment:
#      CXX: powerpc-linux-gnu-g++
#    steps:
#      - default-build

#  powerpc64-unknown-linux-gnu_gcc-5_4:
#    docker:
#      - image: poacpm/powerpc64-unknown-linux-gnu
#    environment:
#      CXX: powerpc64-linux-gnu-g++
#    steps:
#      - default-build

#  powerpc64le-unknown-linux-gnu:
#    docker:
#      - image: poacpm/powerpc64le-unknown-linux-gnu
#    environment:
#      CXX: g++-8
#    steps:
#      - default-build

#  s390x-unknown-linux-gnu:
#    docker:
#      - image: poacpm/s390x-unknown-linux-gnu
#    environment:
#      CXX: g++-8
#    steps:
#      - default-build

#  x86_64-pc-windows-gnu_gcc-6:
#    docker:
#      - image: poacpm/x86_64-pc-windows-gnu
#    environment:
#      CXX: x86_64-w64-mingw32-g++-posix
#    steps:
#      - default-build

#  i686-pc-windows-gnu_gcc-6:
#    docker:
#      - image: poacpm/i686-pc-windows-gnu
#    environment:
#      CXX: i686-w64-mingw32-g++-posix
#    steps:
#      - default-build

  release:
    docker:
      - image: circleci/golang:1.11
    steps:
      - attach_workspace:
          at: .
      - run: mkdir out
      - run: tar czf ./out/x86_64-unknown-linux-gnu.tar.gz ./poac
      - run: go get github.com/tcnksm/ghr
      - run: cp -r ./poac/.git ./
      - run: ghr -t $GITHUB_TOKEN $CIRCLE_TAG out
#      - run: poac publish

workflows:
  version: 2
  builds:
    jobs:
      - checkout_code
      - x86_64-unknown-linux-gnu_gcc-7:
          compiler: g++-7
          requires:
            - checkout_code
      - x86_64-unknown-linux-gnu_gcc-8:
          compiler: g++-8
          requires:
            - checkout_code
      - x86_64-unknown-linux-gnu_gcc-9:
          compiler: g++-9
          requires:
            - checkout_code
#      - x86_64-unknown-linux-gnu_clang-6:
#          requires:
#            - checkout_code
#      - x86_64-unknown-linux-gnu_clang-7:
#          requires:
#            - checkout_code
#      - aarch64-unknown-linux-gnu:
#          requires:
#            - checkout_code
#      - powerpc64le-unknown-linux-gnu:
#          requires:
#            - checkout_code
#      - s390x-unknown-linux-gnu:
#          requires:
#            - checkout_code
      - release:
          requires:
            - x86_64-unknown-linux-gnu_gcc-7
            - x86_64-unknown-linux-gnu_gcc-8
            - x86_64-unknown-linux-gnu_gcc-9
#            - x86_64-unknown-linux-gnu_clang-6
#            - x86_64-unknown-linux-gnu_clang-7
#            - aarch64-unknown-linux-gnu
#            - powerpc64le-unknown-linux-gnu
#            - s390x-unknown-linux-gnu
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+){2}.*$/
